grammar org.eclipselabs.spray2.xtext.Spray2 with org.eclipse.xtext.xbase.Xbase 

generate spray2 "http://www.eclipselabs.org/spray2/xtext/Spray2"

import 'http://www.eclipse.org/xtext/common/JavaVMTypes' as types
import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

Diagram :
    imports+=Import*
    'diagram' name=ID 'for' modelType=[ecore::EClass|QualifiedName] (style=SprayStyleRef)? 
    (sprayElements += SprayElement)*
    (paletteDefinition = PaletteDefinition)?
;

Import:
    'import' importedNamespace=QualifiedNameWithWildCard;

QualifiedNameWithWildCard returns ecore::EString :
    QualifiedName  ('.' '*')?;
    
SprayStyleRef:
    'style' (style=JvmTypeReference);
    
SprayElement: 
    NodeElement | EdgeElement
;

NodeElement: 
    'node' name=ID 'for' type=[ecore::EClass|QualifiedName] (style=SprayStyleRef)? '{'
        ( figure=NodeFigureSection )?
        ( tooling=ToolingSection )?
        ( behavior=BehaviorSection )?
    '}' 
;
EdgeElement: 
    'edge' name=ID 'for' type=[ecore::EClass|QualifiedName] (style=SprayStyleRef)? '{'
        ( figure=EdgeFigureSection )?
        ( tooling=ToolingSection )?
        ( behavior=BehaviorSection )?
    '}'
;

NodeFigureSection: 'figure' shapeRef=JvmTypeReference ('{'
        textProperties+=TextPropertyAssignment*
        compartmentProperties+=CompartmentPropertyAssignment*
    '}')?
;    
EdgeFigureSection: 'figure' shapeRef=JvmTypeReference ('{'
        textProperties+=TextPropertyAssignment*
    '}')?
;

ToolingSection: {ToolingSection} ('tooling' '{'
        ( 'palette' paletteCompartment=STRING )?
        ( 'icon' icon=STRING )?
        ( 'tooltip' tooltipExp=XExpression )?
        ( 'rapid-buttons' rapidButtons+=RapidButtonDefinition ("," rapidButtons+=RapidButtonDefinition)*)? 
    '}')
;

BehaviorSection: {BehaviorSection} ('behavior' '{'
	('creatable-in' compartmentReference+=[ecore::EReference] (',' compartmentReference+=[ecore::EReference])* (label=STRING))?	
	('edit-on-create' askFor=[ecore::EAttribute])?
	('drill-down' )?
	('custom' name = ID | 'ref' (realizedBy=JvmTypeReference) (label=STRING))?
	'}')
;

TextPropertyAssignment: 
    'text' key=[types::JvmEnumerationLiteral|QualifiedName] 'for' attribute=[ecore::EAttribute] (
        '(' ('editable' '=' editable=XBooleanLiteral)? 
            ('format' '=' format=XBlockExpression)?
        ')')?
;

CompartmentPropertyAssignment: 
    'compartment' key=[types::JvmEnumerationLiteral|QualifiedName] 'for' attribute=[ecore::EAttribute];

RapidButtonDefinition: edge=[EdgeElement] ('to' node=[NodeElement])?;

PaletteDefinition: 
    'palette' '{'
        category+=PaletteCategory+
    '}'    
;

PaletteCategory: 'category' name=STRING '{'
        paletteElements+=PaletteElement (',' paletteElements+=PaletteElement)*
    '}'
;

PaletteElement: PaletteNodeElement | PaletteEdgeElement | PaletteCategory;
PaletteNodeElement: 'node' node=[NodeElement];
PaletteEdgeElement: 'edge' edge=[EdgeElement];
