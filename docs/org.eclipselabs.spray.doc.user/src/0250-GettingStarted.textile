h1. Getting Started

h2. 5-Minutes Tutorial

h3. Create a new project

* Create a new Spray project by using the Spray Project Wizard. Open _File / New / Project / Spray / Spray Project_.

!images/projectwizard_1.png!

* Enter the project name @org.eclipselabs.spray.examples.busmod@.
* On the first page you will have to select a EMF metamodel to work with. Click the _Browse Registered Packages_ button to see the EPackages registered in your platform. Choose @http://www.mod4j.org/busmod@

!images/projectwizard_2.png!

* Spray requires that it can find the corresponding genmodel for the EPackage. If it can be found in the registry it will be added automatically.

!images/projectwizard_3.png!

* Press _Next_ (or _Finish_ to skip the next page)
* The next page lets you modify some settings for Spray's code generator, like package names to use. Leave the defaults and press _Finish_ for now.

!images/projectwizard_4.png!

h3. Define Spray Model

After finishing the project wizard the Spray model editor opens. Paste this model into file @busmod.spray@:

bc.. 
diagram busmod

import BusinessDomainDsl.*

class BusinessClass:
    container  ( fill=RGB(217,228,255) ) 
    {
          text ( )  { "<<"+eClass.name+">> " + name};  
          line ( color=black width=2);
          reference properties attribute dataType;
          line (width=1 color=blue);
          reference businessRules;   // will use name property by default
          line (width=1 color=blue);
          
          text () "::" + description;    
    }
    references {
         superclass : connection(); 
    }
    behavior {
        create palette "Shapes";
    }
 
 
class Association:  
    connection () 
    {
        from source;
        to   target;
        toText text() targetMultiplicity.name;
    } 
    behavior {
        create  palette "Connections" ;
    }
p. 
After saving the model the editor sources will be automatically generated to the @src-gen@ folder of the project.
!images/gettingstarted_1.png!

p. 
Replace the plugin.xml in the project root with the plugin.xml from src-gen. 

h3. Test the editor

* Start a Runtime Eclipse instance with _Run As / Eclipse Application_. A new Eclipse instance starts with the plugins deployed.

* Create a new project. The type of project does not matter, but for simplicity choose new Java Project and name it "BusmodTest".
* Right-click on the @src@ folder, choose _File / New / Other -> Examples / Graphiti / Graphiti Diagram_
!images/gettingstarted_2.png!
* Choose the Diagram Type "busmod"
!images/gettingstarted_3.png!
* Your new diagram editor opens!
!images/gettingstarted_4.png!


h2. 15-Minutes Tutorial

In this section we will extend the example from the 5-Minutes Tutorial further. Follow the steps mentioned above first.

h3. Implement a custom behavior

Extend the busmod.spray model like this:

bc.. 
class BusinessClass:
    ...
    behavior {
        create palette "Shapes";
        // add custom behavior
        showInfoForBusinessClass "Show Information";  
    }
    ...
p. 

Right-click on @BusmodCustomShowInfoForBusinessClassFeature@ from the @features@ package. Select _Spray -> Move to source folder for manual extension_. The file is moved from @src-gen@ to @src@Â and opens in the editor.

Implement the execute() method to open a message dialog.

bc.. 
    @Override
    public void execute(ICustomContext context, EObject object) {
        MessageDialog.openInformation(Display.getDefault().getActiveShell(), "Information", 
                "Selected object of type "+object.eClass().getName());
    }
p. 

After restarting you can invoke an action "Show Information" from the context menu of a BusinessClass shape.

!images/gettingstarted_5.png!

!images/gettingstarted_6.png!

