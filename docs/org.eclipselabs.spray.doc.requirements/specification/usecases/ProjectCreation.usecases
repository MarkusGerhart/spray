package org.eclipselabs.spray.requirements.actors

	actors
		DiagramEditorCreator
		"The person responsible for defining the diagram editor"
		DomainExpert "The person responsible for defining the domain model"
end package


package org.eclipselabs.spray.requirements.domain
	import actors from org.eclipselabs.spray.requirements.actors


	usecase UC1 "Create a new domain model"
		actors DomainExpert, DiagramEditorCreator

	end usecase


	usecase UC2 "Import an existing domain model"
		actors DomainExpert, DiagramEditorCreator

	end usecase
end package


package org.eclipselabs.spray.requirements.diagrameditor
	import actors from org.eclipselabs.spray.requirements.actors


	usecase UC1 "Create a new Spray project"
		actors DiagramEditorCreator
		preconditions "Domain model exists" requires
			org.eclipselabs.spray.requirements.domain.UC1

		basic flow
			step 1 "Define a project name"
			step 2 "Define a location"
		end flow with postcondition "postcondition"

	end usecase


	usecase UC2 "Create a new shape definition file"
		actors DiagramEditorCreator

	end usecase


	usecase UC3 "Create a new style definition file"
		actors DiagramEditorCreator

	end usecase


	usecase UC4 "Create a new diagram definition file"
		actors DiagramEditorCreator

	end usecase


	usecase UC5 "Create a new shape definition"
		actors DiagramEditorCreator

	end usecase


	usecase UC6 "Create a new style definition"
		actors DiagramEditorCreator

	end usecase


	usecase UC7 "Create a new gradient definition"
		actors DiagramEditorCreator

	end usecase


	usecase UC8 "Create a new diagram definition"
		actors DiagramEditorCreator

	end usecase
end package