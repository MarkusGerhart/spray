h1. Project Setup

Things to consider when developing Spray projects.

h2. Naming 

Base package / Bundle ID Prefix: @org.eclipselabs.spray@

h2. Source Management

* Generated sources are *not checked in*
* The following resources must be added to .gitignore for each plugin
** src-gen
** target
** bin
** plugin.xml_gen
* Experimental features must be added on a branch until stabilized. This branch may be shared on the remote repository if it is of interest of other developers to contribute or review the changes.

h2. Adding a new Plugin project

h3. Manifest

* Add a @plugin.properties@
bc.. 
# /**
#  * <copyright>
#  * Copyright (c) 2011 The Spray Project.
#  * All rights reserved.   This program and the accompanying materials
#  * are made available under the terms of the Eclipse Public License v1.0
#  * which accompanies this distribution, and is available at
#  * http://www.eclipse.org/legal/epl-v10.html
#  *
#  * Contributors:
#  *   Spray Project Team
#  * </copyright>
#  */
# NLS_MESSAGEFORMAT_VAR
 
pluginName = ADD DESCRIPTION
providerName = Eclipselabs Spray
p. 
* Open MANIFEST.MF, change/add entries (exchange 0.3.0 by current development version from other plugins)
bc.. 
Bundle-Name: %pluginName
Bundle-Vendor: %providerName
Bundle-Version: 0.3.0.qualifier
Bundle-Localization: plugin
p. 

h3. build.properties

Include the following files/directories, if they exist
* Binary Build
** @plugin.properties@
** @feature.properties@
** @icons/@
** @images/@
* Source Build
** @pom.xml@
** @launch/@
** @*/*.launch@
** @log4j.properties@



h3. Project Specific Settings

To avoid confusion between different platforms and workspaces common settings should be defined as project specific settings. Those settings are checked in and thus shared.
 
* _Resource_: Text file encoding: Other / UTF-8
* _Resource_: New text file delimiter: Other / Unix
* _Java Code Style -> Formatter_: 
** Check "Enable project specific settings"
** select Active Profile "`spray_eclipse_formatter`"
* _Java Editor -> Save Actions_
** Check "Enable project specific settings"
** Check "Perform the selected actions on save"
** Check "Format source code" / "Format all lines"
** Check "Organize imports"
 
h3. Build

* Copy the @pom.xml@ from @org.eclipselabs.spray.generator.graphiti@. Exchange the plugin's name in @<artifactId>org.eclipselabs.spray.generator.graphiti</artifactId>@ by the project's name. 
* Open @releng/org.eclipselabs.spray.distribution/pom.xml@ and add the plugin as additional module


h2. Dependency Management

h3. Imported Packages

Required Bundle is sometimes a too tight dependency binding. It does not allow to exchange the implementing bundle, which sometimes might be desired. The following packages should imported instead of adding its bundles to the Required Bundles:

* org.eclipse.xtext.xbase.lib
* org.eclipse.xtext.xtend2.lib
* org.apache.log4j
* org.apache.commons.logging
* com.ibm.icu

h3. Allowed dependencies

Some rules of plugin dependencies should be considered:

* A project created with Spray:
** *must not* be dependent on Spray DSL
** can depend on org.eclipselabs.spray.runtime.* plugins
* Spray runtime plugins must be separated the dependent underlying technology:
** org.eclipselabs.spray.runtime.graphiti depends on Graphiti, but not on others like Xtext
** org.eclipselabs.spray.runtime.xtext depends on Xtext, but not on others like Graphiti



h2. Plugin Development

h3. plugin.xml

Xtext generates a @plugin.xml@ just once, on second generator execution it creates a @plugin.xml_gen@. This is because Xtext's generator cannot merge changes into the @plugin.xml@ and manual modifications might be intended. Differences between both files must be merged manually.

The @plugin.xml@ file is quite large and it can become difficult to decide, which differences are produced by the generator and which are manual changes. In order to identify the intended changes these places must be marked in the code by comments @<!-- SPRAY BEGIN -->...<!-- SPRAY END -->@. Example:

bc.. 
    <extension
            point="org.eclipse.ui.preferencePages">
        <!-- SPRAY BEGIN --><!-- adding category -->
        <page
            category="org.eclipselabs.spray.xtext.Spray"
            class="org.eclipselabs.spray.styles.ui.StyleExecutableExtensionFactory:org.eclipse.xtext.ui.editor.preferences.LanguageRootPreferencePage"
            id="org.eclipselabs.spray.styles.Style"
            name="Style Language">
            <keywordReference id="org.eclipselabs.spray.styles.ui.keyword_Style"/>
        </page>
        <!-- SPRAY END -->
p. 
