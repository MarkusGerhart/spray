h1. Setting up the developer environment

h2. Source Control
 
We are using Git as source management system. The primary repository location is: "https://code.google.com/a/eclipselabs.org/p/spray/":https://code.google.com/a/eclipselabs.org/p/spray/

See "http://code.google.com/a/eclipselabs.org/p/spray/source/checkout":http://code.google.com/a/eclipselabs.org/p/spray/source/checkout for details.

You can new clone Git from the command line or use Eclipse, which is explained in a later section of this guide.

h2. Developer IDE

h3. IDE

Download latest Eclipse Juno Classic appropriate for your platform: "http://www.eclipse.org/downloads/packages/eclipse-classic-422/junosr2":http://www.eclipse.org/downloads/packages/eclipse-classic-422/junosr2

h3. Update Sites

The update sites used to install the features required to develop Spray can be imported in your IDE. As a base take any Eclipse 4.2 distribution. Then open workspace preferences _Install / Update -> Available Software Site_ and click the _Import_ button. When you already cloned the Spray repository, then choose the file

bc. <path to your locally cloned Spray Git repository>/org.eclipselabs.spray.devenv/updatesites-spray-dev.xml

otherwise import the file from the CI server: 

bc. https://spray.ci.cloudbees.com/job/spray-ci-build/lastSuccessfulBuild/artifact/devtools/org.eclipselabs.spray.devenv/updatesites-spray-dev.xml

This xml file will add all required update sites to visit later when installing the plug-ins for the development environment. 

h3. Features to Install

Choose now _Help -> Install New Software_. Choose the following update site in "Work with": Spray Development Environment, this will install

* http://download.eclipse.org/releases/juno
** Eclipse SDK 3.8.0 (org.eclipse.sdk.feature.group)
** PDE 3.8.0 (org.eclipse.pde.feature.group)
** MWE SDK 1.2.1 (org.eclipse.emf.mwe.sdk.feature.group)
** MWE 2 language SDK 2.3.0 (org.eclipse.emf.mwe2.language.sdk.feature.group,org.eclipse.emf.mwe2.language.sdk.source.feature.group)
** MWE 2 runtime SDK 2.3.0 (org.eclipse.emf.mwe2.runtime.sdk.feature.group,org.eclipse.emf.mwe2.runtime.sdk.source.feature.group)(org.eclipse.emf.mwe2.runtime.sdk.feature.group,org.eclipse.emf.mwe2.runtime.sdk.source.feature.group)
** EMF - Eclipse Modeling Framework SDK 2.8.0 (org.eclipse.emf.sdk.feature.group)
** Xtext SDK 2.3.0 (org.eclipse.xtext.sdk.feature.group,org.eclipse.xtext.sdk.source.feature.group)
** Xtend SDK 2.3.0 (org.eclipse.xtext.xtend2.sdk.feature.group,org.eclipse.xtext.xtend2.sdk.source.feature.group)
** Graphiti SDK 0.9.0 (org.eclipse.graphiti.sdk.plus.feature.feature.group)
** Mylyn 3.7.0 (org.eclipse.mylyn.ide.ui)
** Mylyn Builds 0.9.0 (org.eclipse.mylyn.builds.sdk.feature.group)
** EGit 1.3.0 (org.eclipse.egit.feature.group)
** m2e 1.1.0 (org.eclipse.m2e.feature.feature.group)
** Zest SDK 1.3.0 (org.eclipse.zest.sdk.feature.group)
** SWT Designer (org.eclipse.wb.rcp.feature.feature.group,org.eclipse.wb.swt.feature.feature.group)
** Window Builder (org.eclipse.wb.core.feature.feature.group,org.eclipse.wb.doc.user.feature.feature.group,org.eclipse.wb.core.ui.feature.feature.group)
* http://download.itemis.com/updates/releases/2.0.0/
** Xtext Antlr 2.0.0 (de.itemis.xtext.antlr.sdk.feature.group,de.itemis.xtext.antlr.sdk.source.feature.group)
* http://download.eclipse.org/technology/swtbot/helios/dev-build/update-site
** SWT Bot 2.0.5 (org.eclipse.swtbot.ide.feature.group)
* http://xtext-utils.eclipselabs.org.codespot.com/git.distribution/releases/unittesting-0.9.x
** xtext-utils unittesting (org.eclipselabs.xtext.utils.unittesting.feature.feature.group)
* http://update.eclemma.org
** EclEmma Java Code Coverage 1.5.3 (com.mountainminds.eclemma.feature.feature.group)
* http://knittig.de/googlecode-mylyn-connector/update/
** Mylyn Connector for Google Code 0.1.0 (com.googlecode.mylyn.feature.group)

h3. Installing through P2 director launch config

For convenience there is a launch config @install-devenv-4.2.launch@ in project org.eclipselabs.spray.devenv. Right-click this launch config, then choose _Run As / install-devenv-4.2_. Choose the base directory of your Eclipse 4.2 installation. You must not start the config from the Eclipse instance you want to update, take any other Eclipse.

h3. Troubleshooting

If you have already installed one of the above mentioned features you might experience problems installing the newer features. In this case uninstall the features in question before (Eclipse / About Eclipse / Installation Details / Installed Software -> Uninstall).

For example, if you need to upgrade Xtext, uninstall *all* Xtext features, and the install Xtext SDK again with Install New Software.

h3. Add Spray Git repository to Eclipse 

You can use our predefined team project set file to get the Spray projects into your workspace:
* File > Import... > Team/Team Project Set, Next
* File: <path to your locally cloned Spray Git repository>/devtools/org.eclipselabs.spray.devenv/projectSet.psf, Finish 

This will clone the Spray repository into your Eclipse workspace folder, create a number of working sets and add the projects to the working sets. To see the working sets go to the "View menu" icon of the Package Explorer and select Working Sets as Top Level Elements.

If you want to specify the location where to clone the Spray repository locally do the following:   
* File > Git/Projects from Git
* Add
* <Path to your locally cloned Git repository>, Next
* Search, OK

If you had cloned the Spray repository locally and want to use that repository:   
* File > Git/Projects from Git
* Clone
* Paste https://code.google.com/a/eclipselabs.org/p/spray/ in the URI field and add your Google Account user name and your GoogleCode.com password (if your are logged in at the Spray Google Code site, click the Profiles link in the upper right corner and then go to the Settings tab) , Next
* select all branches, Next
* select your local path to store the Git repository clone, Finish

If you want to apply the Spray workset configuration without being forced to clone the Spray repository again, you can copy devtools/org.eclipselabs.spray.devenv/workingsets.xml to </path/to/workspace/.metadata>/.plugins/org.eclipse.ui.workbench/workingsets.xml

h3. Add Spray task repository to Eclipse 

* Window > Show View > Other... > Mylyn/Task Repositories
* Open context menu in Task Repositories view > Add task repositories...
* Google Code, Next
** URL: Paste http://code.google.com/a/eclipselabs.org/p/spray/
** Label: Spray
** unselect Anonymous, if you later want to push code
** enter your Google Account credentials (now use as password your Google Mail password, not the Google Code Password), Finish
!images/mylyn_1.png!
* Add New Query
* use predefined query > Open issues
!images/mylyn_2.png!
* Window > Show View > Other... > Mylyn/Task List

h3. Add Spray Jenkins connector to Eclipse 

* Window > Show View > Other... > Mylyn/Builds
* Click on the first of the icons in the right of the view header > Hudson (supports Jenkins), Next
** Server: https://spray.ci.cloudbees.com
** Label: Spray
** select Anonymous
** click on Refresh button
** select job "spray-ci-build"
** Finish
* click on spray-ci-build to show the current job status 

h2. Target Platform
 
We are targeting for Eclipse Indigo. A "target platform definition":http://help.eclipse.org/indigo/index.jsp?topic=/org.eclipse.pde.doc.user/concepts/target.htmis is provided in @releng/org.eclipselabs.spray.targetplatform/spray.target@. To set this target platform:
* Import the project from path @releng/org.eclipselabs.spray.targetplatform@
* Open Workspace properties, go to _Plug-in Development / Target Platform_
* Here you should see _Spray Target Platform_. Check it and press _Apply_.
** As alternative you can also use the locally built target platform by Add... -> Nothing -> Name: Local Spray Target, Add... -> Directory, Next -> Location: <your local path to the cloned Spray git repository>/releng/org.eclipselabs.spray.repository/target/repository.

!images/targetplatform.png!
 
The target platform contains the following features
* Eclipse Platform SDK 3.7.1 - "http://download.eclipse.org/eclipse/updates/3.7":http://download.eclipse.org/eclipse/updates/3.7
* EMF - Eclipse Modeling Framework SDK 2.7.0 - "http://download.eclipse.org/releases/indigo":http://download.eclipse.org/releases/indigo
* Graphiti SDK 0.8.1 - "http://download.eclipse.org/graphiti/updates/0.8.0":http://download.eclipse.org/graphiti/updates/0.8.0
* MWE SDK 1.2.1 - "http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/":http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/
* Xtext SDK 2.2.1 -  "http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/":http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/* 
* Xtend SDK 2.2.1 -  "http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/":http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/
* Xtext Antlr 2.0.0 - "http://download.itemis.com/updates/releases/2.0.0/":http://download.itemis.com/updates/releases/2.0.0/
* xtext-utils unittesting - "http://xtext-utils.eclipselabs.org.codespot.com/git.distribution/releases/unittesting-0.9.x":http://xtext-utils.eclipselabs.org.codespot.com/git.distribution/releases/unittesting-0.9.x
* SWT Bot - "http://download.eclipse.org/technology/swtbot/helios/dev-build/update-site":http://download.eclipse.org/technology/swtbot/helios/dev-build/update-site
 
Distributions with Eclipse Indigo + Xtext 2.0 can be found here: "http://download.itemis.com/distros/":http://download.itemis.com/distros/
 

h2. Workspace Setup

When creating a new workspace make sure to set the following settings:
 
Resource encoding: UTF-8.
 
Project settings are stored in the @devtools/org.eclipselabs.spray.devenv@> project. Whenever possible, project specific settings should be applied and the settings file checked in.
 
In @org.eclipselabs.spray.devenv@ there is a Java formatter configuration @formatter.xml@ used in this project.
Apply this formatter before committing anything.


