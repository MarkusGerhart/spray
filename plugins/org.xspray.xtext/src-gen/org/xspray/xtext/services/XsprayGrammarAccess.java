/*
* generated by Xtext
*/

package org.xspray.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XsprayGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DiagramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Diagram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiagramKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cMetamodelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImport1Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImport1STRINGTerminalRuleCall_3_0 = (RuleCall)cImport1Assignment_3.eContents().get(0);
		private final Keyword cMetapackageKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cImportPackageAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImportPackageSTRINGTerminalRuleCall_5_0 = (RuleCall)cImportPackageAssignment_5.eContents().get(0);
		private final Keyword cExtensionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cModelfileExtensionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cModelfileExtensionSTRINGTerminalRuleCall_7_0 = (RuleCall)cModelfileExtensionAssignment_7.eContents().get(0);
		private final Assignment cBehaviourGroupsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cBehaviourGroupsBehaviourGroupParserRuleCall_8_0 = (RuleCall)cBehaviourGroupsAssignment_8.eContents().get(0);
		private final Assignment cMetaClassesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMetaClassesMetaClassParserRuleCall_9_0 = (RuleCall)cMetaClassesAssignment_9.eContents().get(0);
		
		//Diagram:
		//	"diagram" name=ID "metamodel" import1=STRING "metapackage" importPackage=STRING "extension" modelfileExtension=STRING
		//	behaviourGroups+=BehaviourGroup* metaClasses+=MetaClass*;
		public ParserRule getRule() { return rule; }

		//"diagram" name=ID "metamodel" import1=STRING "metapackage" importPackage=STRING "extension" modelfileExtension=STRING
		//behaviourGroups+=BehaviourGroup* metaClasses+=MetaClass*
		public Group getGroup() { return cGroup; }

		//"diagram"
		public Keyword getDiagramKeyword_0() { return cDiagramKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"metamodel"
		public Keyword getMetamodelKeyword_2() { return cMetamodelKeyword_2; }

		//import1=STRING
		public Assignment getImport1Assignment_3() { return cImport1Assignment_3; }

		//STRING
		public RuleCall getImport1STRINGTerminalRuleCall_3_0() { return cImport1STRINGTerminalRuleCall_3_0; }

		//"metapackage"
		public Keyword getMetapackageKeyword_4() { return cMetapackageKeyword_4; }

		//importPackage=STRING
		public Assignment getImportPackageAssignment_5() { return cImportPackageAssignment_5; }

		//STRING
		public RuleCall getImportPackageSTRINGTerminalRuleCall_5_0() { return cImportPackageSTRINGTerminalRuleCall_5_0; }

		//"extension"
		public Keyword getExtensionKeyword_6() { return cExtensionKeyword_6; }

		//modelfileExtension=STRING
		public Assignment getModelfileExtensionAssignment_7() { return cModelfileExtensionAssignment_7; }

		//STRING
		public RuleCall getModelfileExtensionSTRINGTerminalRuleCall_7_0() { return cModelfileExtensionSTRINGTerminalRuleCall_7_0; }

		//behaviourGroups+=BehaviourGroup*
		public Assignment getBehaviourGroupsAssignment_8() { return cBehaviourGroupsAssignment_8; }

		//BehaviourGroup
		public RuleCall getBehaviourGroupsBehaviourGroupParserRuleCall_8_0() { return cBehaviourGroupsBehaviourGroupParserRuleCall_8_0; }

		//metaClasses+=MetaClass*
		public Assignment getMetaClassesAssignment_9() { return cMetaClassesAssignment_9; }

		//MetaClass
		public RuleCall getMetaClassesMetaClassParserRuleCall_9_0() { return cMetaClassesMetaClassParserRuleCall_9_0; }
	}

	public class BehaviourGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BehaviourGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBehaviourKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cBehavioursAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cBehavioursBehaviourParserRuleCall_3_0_0 = (RuleCall)cBehavioursAssignment_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BehaviourGroup:
		//	"behaviour" name=ID "[" (behaviours+=Behaviour ";")+ "]";
		public ParserRule getRule() { return rule; }

		//"behaviour" name=ID "[" (behaviours+=Behaviour ";")+ "]"
		public Group getGroup() { return cGroup; }

		//"behaviour"
		public Keyword getBehaviourKeyword_0() { return cBehaviourKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//(behaviours+=Behaviour ";")+
		public Group getGroup_3() { return cGroup_3; }

		//behaviours+=Behaviour
		public Assignment getBehavioursAssignment_3_0() { return cBehavioursAssignment_3_0; }

		//Behaviour
		public RuleCall getBehavioursBehaviourParserRuleCall_3_0_0() { return cBehavioursBehaviourParserRuleCall_3_0_0; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class MetaClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAliasKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIconKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIconAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIconSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cIconAssignment_3_1.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRepresentedByAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRepresentedByShapeParserRuleCall_5_0 = (RuleCall)cRepresentedByAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReferencesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Assignment cReferencesAssignment_6_2_0 = (Assignment)cGroup_6_2.eContents().get(0);
		private final RuleCall cReferencesMetaReference2ParserRuleCall_6_2_0_0 = (RuleCall)cReferencesAssignment_6_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cBehaviorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_2 = (Alternatives)cGroup_7.eContents().get(2);
		private final Group cGroup_7_2_0 = (Group)cAlternatives_7_2.eContents().get(0);
		private final Keyword cGroupKeyword_7_2_0_0 = (Keyword)cGroup_7_2_0.eContents().get(0);
		private final Assignment cBehaviourGroupsAssignment_7_2_0_1 = (Assignment)cGroup_7_2_0.eContents().get(1);
		private final CrossReference cBehaviourGroupsBehaviourGroupCrossReference_7_2_0_1_0 = (CrossReference)cBehaviourGroupsAssignment_7_2_0_1.eContents().get(0);
		private final RuleCall cBehaviourGroupsBehaviourGroupIDTerminalRuleCall_7_2_0_1_0_1 = (RuleCall)cBehaviourGroupsBehaviourGroupCrossReference_7_2_0_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_2_0_2 = (Keyword)cGroup_7_2_0.eContents().get(2);
		private final Group cGroup_7_2_1 = (Group)cAlternatives_7_2.eContents().get(1);
		private final Assignment cBehavioursAssignment_7_2_1_0 = (Assignment)cGroup_7_2_1.eContents().get(0);
		private final RuleCall cBehavioursBehaviourParserRuleCall_7_2_1_0_0 = (RuleCall)cBehavioursAssignment_7_2_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_2_1_1 = (Keyword)cGroup_7_2_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//MetaClass:
		//	"class" name=ID ("alias" alias=ID)? ("icon" icon=STRING)? ":" representedBy=Shape ("references" "["
		//	(references+=MetaReference2 ";")* "]")? ("behavior" "[" ("group" behaviourGroups+=[BehaviourGroup] ";" |
		//	behaviours+=Behaviour ";")* "]")?;
		public ParserRule getRule() { return rule; }

		//"class" name=ID ("alias" alias=ID)? ("icon" icon=STRING)? ":" representedBy=Shape ("references" "["
		//(references+=MetaReference2 ";")* "]")? ("behavior" "[" ("group" behaviourGroups+=[BehaviourGroup] ";" |
		//behaviours+=Behaviour ";")* "]")?
		public Group getGroup() { return cGroup; }

		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("alias" alias=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"alias"
		public Keyword getAliasKeyword_2_0() { return cAliasKeyword_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_1_0() { return cAliasIDTerminalRuleCall_2_1_0; }

		//("icon" icon=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"icon"
		public Keyword getIconKeyword_3_0() { return cIconKeyword_3_0; }

		//icon=STRING
		public Assignment getIconAssignment_3_1() { return cIconAssignment_3_1; }

		//STRING
		public RuleCall getIconSTRINGTerminalRuleCall_3_1_0() { return cIconSTRINGTerminalRuleCall_3_1_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//representedBy=Shape
		public Assignment getRepresentedByAssignment_5() { return cRepresentedByAssignment_5; }

		//Shape
		public RuleCall getRepresentedByShapeParserRuleCall_5_0() { return cRepresentedByShapeParserRuleCall_5_0; }

		//("references" "[" (references+=MetaReference2 ";")* "]")?
		public Group getGroup_6() { return cGroup_6; }

		//"references"
		public Keyword getReferencesKeyword_6_0() { return cReferencesKeyword_6_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6_1() { return cLeftSquareBracketKeyword_6_1; }

		//(references+=MetaReference2 ";")*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//references+=MetaReference2
		public Assignment getReferencesAssignment_6_2_0() { return cReferencesAssignment_6_2_0; }

		//MetaReference2
		public RuleCall getReferencesMetaReference2ParserRuleCall_6_2_0_0() { return cReferencesMetaReference2ParserRuleCall_6_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_6_2_1() { return cSemicolonKeyword_6_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }

		//("behavior" "[" ("group" behaviourGroups+=[BehaviourGroup] ";" | behaviours+=Behaviour ";")* "]")?
		public Group getGroup_7() { return cGroup_7; }

		//"behavior"
		public Keyword getBehaviorKeyword_7_0() { return cBehaviorKeyword_7_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_1() { return cLeftSquareBracketKeyword_7_1; }

		//("group" behaviourGroups+=[BehaviourGroup] ";" | behaviours+=Behaviour ";")*
		public Alternatives getAlternatives_7_2() { return cAlternatives_7_2; }

		//"group" behaviourGroups+=[BehaviourGroup] ";"
		public Group getGroup_7_2_0() { return cGroup_7_2_0; }

		//"group"
		public Keyword getGroupKeyword_7_2_0_0() { return cGroupKeyword_7_2_0_0; }

		//behaviourGroups+=[BehaviourGroup]
		public Assignment getBehaviourGroupsAssignment_7_2_0_1() { return cBehaviourGroupsAssignment_7_2_0_1; }

		//[BehaviourGroup]
		public CrossReference getBehaviourGroupsBehaviourGroupCrossReference_7_2_0_1_0() { return cBehaviourGroupsBehaviourGroupCrossReference_7_2_0_1_0; }

		//ID
		public RuleCall getBehaviourGroupsBehaviourGroupIDTerminalRuleCall_7_2_0_1_0_1() { return cBehaviourGroupsBehaviourGroupIDTerminalRuleCall_7_2_0_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_7_2_0_2() { return cSemicolonKeyword_7_2_0_2; }

		//behaviours+=Behaviour ";"
		public Group getGroup_7_2_1() { return cGroup_7_2_1; }

		//behaviours+=Behaviour
		public Assignment getBehavioursAssignment_7_2_1_0() { return cBehavioursAssignment_7_2_1_0; }

		//Behaviour
		public RuleCall getBehavioursBehaviourParserRuleCall_7_2_1_0_0() { return cBehavioursBehaviourParserRuleCall_7_2_1_0_0; }

		//";"
		public Keyword getSemicolonKeyword_7_2_1_1() { return cSemicolonKeyword_7_2_1_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_3() { return cRightSquareBracketKeyword_7_3; }
	}

	public class BehaviourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Behaviour");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStandardBehaviourParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCustomBehaviourParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Behaviour:
		//	StandardBehaviour | CustomBehaviour;
		public ParserRule getRule() { return rule; }

		//StandardBehaviour | CustomBehaviour
		public Alternatives getAlternatives() { return cAlternatives; }

		//StandardBehaviour
		public RuleCall getStandardBehaviourParserRuleCall_0() { return cStandardBehaviourParserRuleCall_0; }

		//CustomBehaviour
		public RuleCall getCustomBehaviourParserRuleCall_1() { return cCustomBehaviourParserRuleCall_1; }
	}

	public class StandardBehaviourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StandardBehaviour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeBehaviourTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPaletteKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPaletteCompartmentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPaletteCompartmentSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cPaletteCompartmentAssignment_2_1.eContents().get(0);
		
		//StandardBehaviour:
		//	type=BehaviourType label=STRING? ("palette" paletteCompartment=STRING)?;
		public ParserRule getRule() { return rule; }

		//type=BehaviourType label=STRING? ("palette" paletteCompartment=STRING)?
		public Group getGroup() { return cGroup; }

		//type=BehaviourType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//BehaviourType
		public RuleCall getTypeBehaviourTypeEnumRuleCall_0_0() { return cTypeBehaviourTypeEnumRuleCall_0_0; }

		//label=STRING?
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_1_0() { return cLabelSTRINGTerminalRuleCall_1_0; }

		//("palette" paletteCompartment=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"palette"
		public Keyword getPaletteKeyword_2_0() { return cPaletteKeyword_2_0; }

		//paletteCompartment=STRING
		public Assignment getPaletteCompartmentAssignment_2_1() { return cPaletteCompartmentAssignment_2_1; }

		//STRING
		public RuleCall getPaletteCompartmentSTRINGTerminalRuleCall_2_1_0() { return cPaletteCompartmentSTRINGTerminalRuleCall_2_1_0; }
	}

	public class CustomBehaviourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CustomBehaviour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		
		//CustomBehaviour:
		//	name=ID label=STRING;
		public ParserRule getRule() { return rule; }

		//name=ID label=STRING
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//label=STRING
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_1_0() { return cLabelSTRINGTerminalRuleCall_1_0; }
	}

	public class MetaReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRepresentedByAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRepresentedByConnectionParserRuleCall_3_0 = (RuleCall)cRepresentedByAssignment_3.eContents().get(0);
		
		//MetaReference:
		//	"reference" name=ID ":" representedBy=Connection;
		public ParserRule getRule() { return rule; }

		//"reference" name=ID ":" representedBy=Connection
		public Group getGroup() { return cGroup; }

		//"reference"
		public Keyword getReferenceKeyword_0() { return cReferenceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//representedBy=Connection
		public Assignment getRepresentedByAssignment_3() { return cRepresentedByAssignment_3; }

		//Connection
		public RuleCall getRepresentedByConnectionParserRuleCall_3_0() { return cRepresentedByConnectionParserRuleCall_3_0; }
	}

	public class MetaReference2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaReference2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRepresentedByAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRepresentedByConnectionParserRuleCall_2_0 = (RuleCall)cRepresentedByAssignment_2.eContents().get(0);
		
		//MetaReference2 returns MetaReference:
		//	name=ID ":" representedBy=Connection;
		public ParserRule getRule() { return rule; }

		//name=ID ":" representedBy=Connection
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//representedBy=Connection
		public Assignment getRepresentedByAssignment_2() { return cRepresentedByAssignment_2; }

		//Connection
		public RuleCall getRepresentedByConnectionParserRuleCall_2_0() { return cRepresentedByConnectionParserRuleCall_2_0; }
	}

	public class ShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Shape");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRectangleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTextParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContainerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConnectionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLineParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Shape:
		//	Rectangle | Text | Container | Connection | Line;
		public ParserRule getRule() { return rule; }

		//Rectangle | Text | Container | Connection | Line
		public Alternatives getAlternatives() { return cAlternatives; }

		//Rectangle
		public RuleCall getRectangleParserRuleCall_0() { return cRectangleParserRuleCall_0; }

		//Text
		public RuleCall getTextParserRuleCall_1() { return cTextParserRuleCall_1; }

		//Container
		public RuleCall getContainerParserRuleCall_2() { return cContainerParserRuleCall_2; }

		//Connection
		public RuleCall getConnectionParserRuleCall_3() { return cConnectionParserRuleCall_3; }

		//Line
		public RuleCall getLineParserRuleCall_4() { return cLineParserRuleCall_4; }
	}

	public class LayoutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Layout");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLayoutAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cWidthKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_0_1 = (Keyword)cGroup_2_0.eContents().get(1);
		private final Assignment cLineWidthAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cLineWidthINTTerminalRuleCall_2_0_2_0 = (RuleCall)cLineWidthAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cColorKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		private final Assignment cLineColorAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cLineColorColorEnumRuleCall_2_1_2_0 = (RuleCall)cLineColorAssignment_2_1_2.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cFillKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cFillColorAssignment_2_2_2 = (Assignment)cGroup_2_2.eContents().get(2);
		private final RuleCall cFillColorColorEnumRuleCall_2_2_2_0 = (RuleCall)cFillColorAssignment_2_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cFigureKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Assignment cFigureAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cFigureSTRINGTerminalRuleCall_2_3_2_0 = (RuleCall)cFigureAssignment_2_3_2.eContents().get(0);
		private final Assignment cBoldAssignment_2_4 = (Assignment)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cBoldBoldKeyword_2_4_0 = (Keyword)cBoldAssignment_2_4.eContents().get(0);
		private final Assignment cItalicAssignment_2_5 = (Assignment)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cItalicItalicKeyword_2_5_0 = (Keyword)cItalicAssignment_2_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Layout:
		//	{Layout} "(" (("width" "=" lineWidth=INT)? & ("color" "=" lineColor=Color)? & ("fill" "=" fillColor=Color)? &
		//	("figure" "=" figure=STRING)? & bold?="bold"? & italic?="italic"?) ")";
		public ParserRule getRule() { return rule; }

		//{Layout} "(" (("width" "=" lineWidth=INT)? & ("color" "=" lineColor=Color)? & ("fill" "=" fillColor=Color)? & ("figure"
		//"=" figure=STRING)? & bold?="bold"? & italic?="italic"?) ")"
		public Group getGroup() { return cGroup; }

		//{Layout}
		public Action getLayoutAction_0() { return cLayoutAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//("width" "=" lineWidth=INT)? & ("color" "=" lineColor=Color)? & ("fill" "=" fillColor=Color)? & ("figure" "="
		//figure=STRING)? & bold?="bold"? & italic?="italic"?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//("width" "=" lineWidth=INT)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"width"
		public Keyword getWidthKeyword_2_0_0() { return cWidthKeyword_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_0_1() { return cEqualsSignKeyword_2_0_1; }

		//lineWidth=INT
		public Assignment getLineWidthAssignment_2_0_2() { return cLineWidthAssignment_2_0_2; }

		//INT
		public RuleCall getLineWidthINTTerminalRuleCall_2_0_2_0() { return cLineWidthINTTerminalRuleCall_2_0_2_0; }

		//("color" "=" lineColor=Color)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"color"
		public Keyword getColorKeyword_2_1_0() { return cColorKeyword_2_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_1_1() { return cEqualsSignKeyword_2_1_1; }

		//lineColor=Color
		public Assignment getLineColorAssignment_2_1_2() { return cLineColorAssignment_2_1_2; }

		//Color
		public RuleCall getLineColorColorEnumRuleCall_2_1_2_0() { return cLineColorColorEnumRuleCall_2_1_2_0; }

		//("fill" "=" fillColor=Color)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"fill"
		public Keyword getFillKeyword_2_2_0() { return cFillKeyword_2_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_2_1() { return cEqualsSignKeyword_2_2_1; }

		//fillColor=Color
		public Assignment getFillColorAssignment_2_2_2() { return cFillColorAssignment_2_2_2; }

		//Color
		public RuleCall getFillColorColorEnumRuleCall_2_2_2_0() { return cFillColorColorEnumRuleCall_2_2_2_0; }

		//("figure" "=" figure=STRING)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"figure"
		public Keyword getFigureKeyword_2_3_0() { return cFigureKeyword_2_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_3_1() { return cEqualsSignKeyword_2_3_1; }

		//figure=STRING
		public Assignment getFigureAssignment_2_3_2() { return cFigureAssignment_2_3_2; }

		//STRING
		public RuleCall getFigureSTRINGTerminalRuleCall_2_3_2_0() { return cFigureSTRINGTerminalRuleCall_2_3_2_0; }

		//bold?="bold"?
		public Assignment getBoldAssignment_2_4() { return cBoldAssignment_2_4; }

		//"bold"
		public Keyword getBoldBoldKeyword_2_4_0() { return cBoldBoldKeyword_2_4_0; }

		//italic?="italic"?
		public Assignment getItalicAssignment_2_5() { return cItalicAssignment_2_5; }

		//"italic"
		public Keyword getItalicItalicKeyword_2_5_0() { return cItalicItalicKeyword_2_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class RectangleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rectangle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRectangleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRectangleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLayoutParserRuleCall_2_0 = (RuleCall)cLayoutAssignment_2.eContents().get(0);
		
		////	( '('
		////		(
		////			( 'width' '=' lineWidth = INT )?
		////		  & ( 'cornerWidth' '=' cornerWidth = INT)? 
		////		  & ( 'cornerHeight' '=' cornerHeight = INT)?
		////		  & ( 'color' '=' lineColor = Color)?
		////		  & ( 'fill' '=' fillColor = Color)?
		////		) 
		////	  ')'
		////	 )?
		//Rectangle:
		//	{Rectangle} "rectangle" layout= // 	name=EString
		//	Layout;
		public ParserRule getRule() { return rule; }

		//{Rectangle} "rectangle" layout= // 	name=EString
		//Layout
		public Group getGroup() { return cGroup; }

		//{Rectangle}
		public Action getRectangleAction_0() { return cRectangleAction_0; }

		//"rectangle"
		public Keyword getRectangleKeyword_1() { return cRectangleKeyword_1; }

		//layout= // 	name=EString
		//Layout
		public Assignment getLayoutAssignment_2() { return cLayoutAssignment_2; }

		//// 	name=EString
		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_2_0() { return cLayoutLayoutParserRuleCall_2_0; }
	}

	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConnectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConnectionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLayoutParserRuleCall_2_0 = (RuleCall)cLayoutAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cFromKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cFromAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFromIDTerminalRuleCall_3_2_0 = (RuleCall)cFromAssignment_3_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cToKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cToAssignment_3_5 = (Assignment)cGroup_3.eContents().get(5);
		private final RuleCall cToIDTerminalRuleCall_3_5_0 = (RuleCall)cToAssignment_3_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_6 = (Keyword)cGroup_3.eContents().get(6);
		private final UnorderedGroup cUnorderedGroup_3_7 = (UnorderedGroup)cGroup_3.eContents().get(7);
		private final Group cGroup_3_7_0 = (Group)cUnorderedGroup_3_7.eContents().get(0);
		private final Keyword cFromTextKeyword_3_7_0_0 = (Keyword)cGroup_3_7_0.eContents().get(0);
		private final Assignment cFromLabelAssignment_3_7_0_1 = (Assignment)cGroup_3_7_0.eContents().get(1);
		private final RuleCall cFromLabelTextParserRuleCall_3_7_0_1_0 = (RuleCall)cFromLabelAssignment_3_7_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_7_0_2 = (Keyword)cGroup_3_7_0.eContents().get(2);
		private final Group cGroup_3_7_1 = (Group)cUnorderedGroup_3_7.eContents().get(1);
		private final Keyword cConnectionTextKeyword_3_7_1_0 = (Keyword)cGroup_3_7_1.eContents().get(0);
		private final Assignment cConnectionLabelAssignment_3_7_1_1 = (Assignment)cGroup_3_7_1.eContents().get(1);
		private final RuleCall cConnectionLabelTextParserRuleCall_3_7_1_1_0 = (RuleCall)cConnectionLabelAssignment_3_7_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_7_1_2 = (Keyword)cGroup_3_7_1.eContents().get(2);
		private final Group cGroup_3_7_2 = (Group)cUnorderedGroup_3_7.eContents().get(2);
		private final Keyword cToTextKeyword_3_7_2_0 = (Keyword)cGroup_3_7_2.eContents().get(0);
		private final Assignment cToLabelAssignment_3_7_2_1 = (Assignment)cGroup_3_7_2.eContents().get(1);
		private final RuleCall cToLabelTextParserRuleCall_3_7_2_1_0 = (RuleCall)cToLabelAssignment_3_7_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_7_2_2 = (Keyword)cGroup_3_7_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3_8 = (Keyword)cGroup_3.eContents().get(8);
		
		////	( '('
		////		( 
		////		  ( 'width' '=' lineWidth = INT )?
		////		  &
		////		  ( 'color' '=' lineColor = Color)?
		////		)
		////	  ')'
		////	 )?
		//Connection:
		//	{Connection} "connection" layout=Layout ("[" "from" from=ID ";" "to" to=ID ";" (("fromText" fromLabel=Text ";")? &
		//	("connectionText" connectionLabel=Text ";")? & ("toText" toLabel=Text ";")?) "]")?;
		public ParserRule getRule() { return rule; }

		//{Connection} "connection" layout=Layout ("[" "from" from=ID ";" "to" to=ID ";" (("fromText" fromLabel=Text ";")? &
		//("connectionText" connectionLabel=Text ";")? & ("toText" toLabel=Text ";")?) "]")?
		public Group getGroup() { return cGroup; }

		//{Connection}
		public Action getConnectionAction_0() { return cConnectionAction_0; }

		//"connection"
		public Keyword getConnectionKeyword_1() { return cConnectionKeyword_1; }

		//layout=Layout
		public Assignment getLayoutAssignment_2() { return cLayoutAssignment_2; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_2_0() { return cLayoutLayoutParserRuleCall_2_0; }

		//("[" "from" from=ID ";" "to" to=ID ";" (("fromText" fromLabel=Text ";")? & ("connectionText" connectionLabel=Text ";")?
		//& ("toText" toLabel=Text ";")?) "]")?
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//"from"
		public Keyword getFromKeyword_3_1() { return cFromKeyword_3_1; }

		//from=ID
		public Assignment getFromAssignment_3_2() { return cFromAssignment_3_2; }

		//ID
		public RuleCall getFromIDTerminalRuleCall_3_2_0() { return cFromIDTerminalRuleCall_3_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }

		//"to"
		public Keyword getToKeyword_3_4() { return cToKeyword_3_4; }

		//to=ID
		public Assignment getToAssignment_3_5() { return cToAssignment_3_5; }

		//ID
		public RuleCall getToIDTerminalRuleCall_3_5_0() { return cToIDTerminalRuleCall_3_5_0; }

		//";"
		public Keyword getSemicolonKeyword_3_6() { return cSemicolonKeyword_3_6; }

		//("fromText" fromLabel=Text ";")? & ("connectionText" connectionLabel=Text ";")? & ("toText" toLabel=Text ";")?
		public UnorderedGroup getUnorderedGroup_3_7() { return cUnorderedGroup_3_7; }

		//("fromText" fromLabel=Text ";")?
		public Group getGroup_3_7_0() { return cGroup_3_7_0; }

		//"fromText"
		public Keyword getFromTextKeyword_3_7_0_0() { return cFromTextKeyword_3_7_0_0; }

		//fromLabel=Text
		public Assignment getFromLabelAssignment_3_7_0_1() { return cFromLabelAssignment_3_7_0_1; }

		//Text
		public RuleCall getFromLabelTextParserRuleCall_3_7_0_1_0() { return cFromLabelTextParserRuleCall_3_7_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3_7_0_2() { return cSemicolonKeyword_3_7_0_2; }

		//("connectionText" connectionLabel=Text ";")?
		public Group getGroup_3_7_1() { return cGroup_3_7_1; }

		//"connectionText"
		public Keyword getConnectionTextKeyword_3_7_1_0() { return cConnectionTextKeyword_3_7_1_0; }

		//connectionLabel=Text
		public Assignment getConnectionLabelAssignment_3_7_1_1() { return cConnectionLabelAssignment_3_7_1_1; }

		//Text
		public RuleCall getConnectionLabelTextParserRuleCall_3_7_1_1_0() { return cConnectionLabelTextParserRuleCall_3_7_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3_7_1_2() { return cSemicolonKeyword_3_7_1_2; }

		//("toText" toLabel=Text ";")?
		public Group getGroup_3_7_2() { return cGroup_3_7_2; }

		//"toText"
		public Keyword getToTextKeyword_3_7_2_0() { return cToTextKeyword_3_7_2_0; }

		//toLabel=Text
		public Assignment getToLabelAssignment_3_7_2_1() { return cToLabelAssignment_3_7_2_1; }

		//Text
		public RuleCall getToLabelTextParserRuleCall_3_7_2_1_0() { return cToLabelTextParserRuleCall_3_7_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_3_7_2_2() { return cSemicolonKeyword_3_7_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_8() { return cRightSquareBracketKeyword_3_8; }
	}

	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTextAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTextKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLayoutParserRuleCall_2_0 = (RuleCall)cLayoutAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSprayStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//Text:
		//	{Text} "text" layout=Layout //	name=EString
		//	value+=SprayString+;
		public ParserRule getRule() { return rule; }

		//{Text} "text" layout=Layout //	name=EString
		//value+=SprayString+
		public Group getGroup() { return cGroup; }

		//{Text}
		public Action getTextAction_0() { return cTextAction_0; }

		//"text"
		public Keyword getTextKeyword_1() { return cTextKeyword_1; }

		//layout=Layout
		public Assignment getLayoutAssignment_2() { return cLayoutAssignment_2; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_2_0() { return cLayoutLayoutParserRuleCall_2_0; }

		//value+=SprayString+
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//SprayString
		public RuleCall getValueSprayStringParserRuleCall_3_0() { return cValueSprayStringParserRuleCall_3_0; }
	}

	public class SprayStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SprayString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMetaAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SprayString:
		//	MetaAttribute | StringLiteral;
		public ParserRule getRule() { return rule; }

		//MetaAttribute | StringLiteral
		public Alternatives getAlternatives() { return cAlternatives; }

		//MetaAttribute
		public RuleCall getMetaAttributeParserRuleCall_0() { return cMetaAttributeParserRuleCall_0; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_1() { return cStringLiteralParserRuleCall_1; }
	}

	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringLiteral");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//StringLiteral:
		//	name=STRING;
		public ParserRule getRule() { return rule; }

		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}

	public class MetaAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaAttribute");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//MetaAttribute:
		//	name=QualifiedName;
		public ParserRule getRule() { return rule; }

		//name=QualifiedName
		public Assignment getNameAssignment() { return cNameAssignment; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0() { return cNameQualifiedNameParserRuleCall_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class LineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Line");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLayoutParserRuleCall_2_0 = (RuleCall)cLayoutAssignment_2.eContents().get(0);
		
		//Line:
		//	{Line} "line" layout=Layout;
		public ParserRule getRule() { return rule; }

		//{Line} "line" layout=Layout
		public Group getGroup() { return cGroup; }

		//{Line}
		public Action getLineAction_0() { return cLineAction_0; }

		//"line"
		public Keyword getLineKeyword_1() { return cLineKeyword_1; }

		//layout=Layout
		public Assignment getLayoutAssignment_2() { return cLayoutAssignment_2; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_2_0() { return cLayoutLayoutParserRuleCall_2_0; }
	}

	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLayoutParserRuleCall_2_0 = (RuleCall)cLayoutAssignment_2.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cPartsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cPartsSprayElementParserRuleCall_4_0_0 = (RuleCall)cPartsAssignment_4_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Container:
		//	{Container} "container" layout=Layout "[" (parts+=SprayElement ";")* "]";
		public ParserRule getRule() { return rule; }

		//{Container} "container" layout=Layout "[" (parts+=SprayElement ";")* "]"
		public Group getGroup() { return cGroup; }

		//{Container}
		public Action getContainerAction_0() { return cContainerAction_0; }

		//"container"
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }

		//layout=Layout
		public Assignment getLayoutAssignment_2() { return cLayoutAssignment_2; }

		//Layout
		public RuleCall getLayoutLayoutParserRuleCall_2_0() { return cLayoutLayoutParserRuleCall_2_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//(parts+=SprayElement ";")*
		public Group getGroup_4() { return cGroup_4; }

		//parts+=SprayElement
		public Assignment getPartsAssignment_4_0() { return cPartsAssignment_4_0; }

		//SprayElement
		public RuleCall getPartsSprayElementParserRuleCall_4_0_0() { return cPartsSprayElementParserRuleCall_4_0_0; }

		//";"
		public Keyword getSemicolonKeyword_4_1() { return cSemicolonKeyword_4_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class SprayElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SprayElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cShapeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMetaReferenceAsShapeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMetaAttributeAsShapeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//SprayElement:
		//	Shape | MetaReferenceAsShape | MetaAttributeAsShape;
		public ParserRule getRule() { return rule; }

		//Shape | MetaReferenceAsShape | MetaAttributeAsShape
		public Alternatives getAlternatives() { return cAlternatives; }

		//Shape
		public RuleCall getShapeParserRuleCall_0() { return cShapeParserRuleCall_0; }

		//MetaReferenceAsShape
		public RuleCall getMetaReferenceAsShapeParserRuleCall_1() { return cMetaReferenceAsShapeParserRuleCall_1; }

		//MetaAttributeAsShape
		public RuleCall getMetaAttributeAsShapeParserRuleCall_2() { return cMetaAttributeAsShapeParserRuleCall_2; }
	}

	public class MetaReferenceAsShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaReferenceAsShape");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReferenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAttributeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLabelPropertyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cLabelPropertyIDTerminalRuleCall_2_1_0 = (RuleCall)cLabelPropertyAssignment_2_1.eContents().get(0);
		
		//MetaReferenceAsShape returns MetaReference:
		//	"reference" name=ID ("attribute" labelProperty=ID)?;
		public ParserRule getRule() { return rule; }

		//"reference" name=ID ("attribute" labelProperty=ID)?
		public Group getGroup() { return cGroup; }

		//"reference"
		public Keyword getReferenceKeyword_0() { return cReferenceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("attribute" labelProperty=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"attribute"
		public Keyword getAttributeKeyword_2_0() { return cAttributeKeyword_2_0; }

		//labelProperty=ID
		public Assignment getLabelPropertyAssignment_2_1() { return cLabelPropertyAssignment_2_1; }

		//ID
		public RuleCall getLabelPropertyIDTerminalRuleCall_2_1_0() { return cLabelPropertyIDTerminalRuleCall_2_1_0; }
	}

	public class MetaAttributeAsShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MetaAttributeAsShape");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//MetaAttributeAsShape returns MetaAttribute:
		//	"attribute" name=ID;
		public ParserRule getRule() { return rule; }

		//"attribute" name=ID
		public Group getGroup() { return cGroup; }

		//"attribute"
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	
	
	public class BehaviourTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "BehaviourType");
		private final EnumLiteralDeclaration cCREATE_BEHAVIOUREnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cCREATE_BEHAVIOURCreateKeyword_0 = (Keyword)cCREATE_BEHAVIOUREnumLiteralDeclaration.eContents().get(0);
		
		//enum BehaviourType:
		//	CREATE_BEHAVIOUR="create";
		public EnumRule getRule() { return rule; }

		//CREATE_BEHAVIOUR="create"
		public EnumLiteralDeclaration getCREATE_BEHAVIOUREnumLiteralDeclaration() { return cCREATE_BEHAVIOUREnumLiteralDeclaration; }

		//"create"
		public Keyword getCREATE_BEHAVIOURCreateKeyword_0() { return cCREATE_BEHAVIOURCreateKeyword_0; }
	}

	public class ColorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Color");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBLACKEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBLACKBlackKeyword_0_0 = (Keyword)cBLACKEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cREDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cREDRedKeyword_1_0 = (Keyword)cREDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGREENEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGREENGreenKeyword_2_0 = (Keyword)cGREENEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLIGHT_GRAYEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLIGHT_GRAYLight_grayKeyword_3_0 = (Keyword)cLIGHT_GRAYEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLIGHT_LIGHT_GRAYEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLIGHT_LIGHT_GRAYLight_light_grayKeyword_4_0 = (Keyword)cLIGHT_LIGHT_GRAYEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cGRAYEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cGRAYGrayKeyword_5_0 = (Keyword)cGRAYEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cORANGEEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cORANGEOrangeKeyword_6_0 = (Keyword)cORANGEEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cWHITEEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cWHITEWhiteKeyword_7_0 = (Keyword)cWHITEEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cYELLOWEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cYELLOWYellowKeyword_8_0 = (Keyword)cYELLOWEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cDARK_BLUEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cDARK_BLUEDark_blueKeyword_9_0 = (Keyword)cDARK_BLUEEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cVC_DARK_BLUEEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cVC_DARK_BLUEVc_dark_blueKeyword_10_0 = (Keyword)cVC_DARK_BLUEEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cCYANEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cCYANCyanKeyword_11_0 = (Keyword)cCYANEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cDARK_GREENEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cDARK_GREENDark_greenKeyword_12_0 = (Keyword)cDARK_GREENEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cLIGHT_GREENEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cLIGHT_GREENLight_greenKeyword_13_0 = (Keyword)cLIGHT_GREENEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cLIGHT_BLUEEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cLIGHT_BLUELight_blueKeyword_14_0 = (Keyword)cLIGHT_BLUEEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cVC_MEDIUM_BLUEEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cVC_MEDIUM_BLUEMedium_blueKeyword_15_0 = (Keyword)cVC_MEDIUM_BLUEEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cPINKEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cPINKPinkKeyword_16_0 = (Keyword)cPINKEnumLiteralDeclaration_16.eContents().get(0);
		
		//enum Color:
		//	BLACK="black" | RED="red" | GREEN="green" | LIGHT_GRAY="light_gray" | LIGHT_LIGHT_GRAY="light_light_gray" |
		//	GRAY="gray" | ORANGE="orange" | WHITE="white" | YELLOW="yellow" | DARK_BLUE="dark_blue" | VC_DARK_BLUE="vc_dark_blue"
		//	| CYAN="cyan" | DARK_GREEN="dark_green" | LIGHT_GREEN="light_green" | LIGHT_BLUE="light_blue" |
		//	VC_MEDIUM_BLUE="medium_blue" | PINK="pink";
		public EnumRule getRule() { return rule; }

		//BLACK="black" | RED="red" | GREEN="green" | LIGHT_GRAY="light_gray" | LIGHT_LIGHT_GRAY="light_light_gray" | GRAY="gray"
		//| ORANGE="orange" | WHITE="white" | YELLOW="yellow" | DARK_BLUE="dark_blue" | VC_DARK_BLUE="vc_dark_blue" | CYAN="cyan"
		//| DARK_GREEN="dark_green" | LIGHT_GREEN="light_green" | LIGHT_BLUE="light_blue" | VC_MEDIUM_BLUE="medium_blue" |
		//PINK="pink"
		public Alternatives getAlternatives() { return cAlternatives; }

		//BLACK="black"
		public EnumLiteralDeclaration getBLACKEnumLiteralDeclaration_0() { return cBLACKEnumLiteralDeclaration_0; }

		//"black"
		public Keyword getBLACKBlackKeyword_0_0() { return cBLACKBlackKeyword_0_0; }

		//RED="red"
		public EnumLiteralDeclaration getREDEnumLiteralDeclaration_1() { return cREDEnumLiteralDeclaration_1; }

		//"red"
		public Keyword getREDRedKeyword_1_0() { return cREDRedKeyword_1_0; }

		//GREEN="green"
		public EnumLiteralDeclaration getGREENEnumLiteralDeclaration_2() { return cGREENEnumLiteralDeclaration_2; }

		//"green"
		public Keyword getGREENGreenKeyword_2_0() { return cGREENGreenKeyword_2_0; }

		//LIGHT_GRAY="light_gray"
		public EnumLiteralDeclaration getLIGHT_GRAYEnumLiteralDeclaration_3() { return cLIGHT_GRAYEnumLiteralDeclaration_3; }

		//"light_gray"
		public Keyword getLIGHT_GRAYLight_grayKeyword_3_0() { return cLIGHT_GRAYLight_grayKeyword_3_0; }

		//LIGHT_LIGHT_GRAY="light_light_gray"
		public EnumLiteralDeclaration getLIGHT_LIGHT_GRAYEnumLiteralDeclaration_4() { return cLIGHT_LIGHT_GRAYEnumLiteralDeclaration_4; }

		//"light_light_gray"
		public Keyword getLIGHT_LIGHT_GRAYLight_light_grayKeyword_4_0() { return cLIGHT_LIGHT_GRAYLight_light_grayKeyword_4_0; }

		//GRAY="gray"
		public EnumLiteralDeclaration getGRAYEnumLiteralDeclaration_5() { return cGRAYEnumLiteralDeclaration_5; }

		//"gray"
		public Keyword getGRAYGrayKeyword_5_0() { return cGRAYGrayKeyword_5_0; }

		//ORANGE="orange"
		public EnumLiteralDeclaration getORANGEEnumLiteralDeclaration_6() { return cORANGEEnumLiteralDeclaration_6; }

		//"orange"
		public Keyword getORANGEOrangeKeyword_6_0() { return cORANGEOrangeKeyword_6_0; }

		//WHITE="white"
		public EnumLiteralDeclaration getWHITEEnumLiteralDeclaration_7() { return cWHITEEnumLiteralDeclaration_7; }

		//"white"
		public Keyword getWHITEWhiteKeyword_7_0() { return cWHITEWhiteKeyword_7_0; }

		//YELLOW="yellow"
		public EnumLiteralDeclaration getYELLOWEnumLiteralDeclaration_8() { return cYELLOWEnumLiteralDeclaration_8; }

		//"yellow"
		public Keyword getYELLOWYellowKeyword_8_0() { return cYELLOWYellowKeyword_8_0; }

		//DARK_BLUE="dark_blue"
		public EnumLiteralDeclaration getDARK_BLUEEnumLiteralDeclaration_9() { return cDARK_BLUEEnumLiteralDeclaration_9; }

		//"dark_blue"
		public Keyword getDARK_BLUEDark_blueKeyword_9_0() { return cDARK_BLUEDark_blueKeyword_9_0; }

		//VC_DARK_BLUE="vc_dark_blue"
		public EnumLiteralDeclaration getVC_DARK_BLUEEnumLiteralDeclaration_10() { return cVC_DARK_BLUEEnumLiteralDeclaration_10; }

		//"vc_dark_blue"
		public Keyword getVC_DARK_BLUEVc_dark_blueKeyword_10_0() { return cVC_DARK_BLUEVc_dark_blueKeyword_10_0; }

		//CYAN="cyan"
		public EnumLiteralDeclaration getCYANEnumLiteralDeclaration_11() { return cCYANEnumLiteralDeclaration_11; }

		//"cyan"
		public Keyword getCYANCyanKeyword_11_0() { return cCYANCyanKeyword_11_0; }

		//DARK_GREEN="dark_green"
		public EnumLiteralDeclaration getDARK_GREENEnumLiteralDeclaration_12() { return cDARK_GREENEnumLiteralDeclaration_12; }

		//"dark_green"
		public Keyword getDARK_GREENDark_greenKeyword_12_0() { return cDARK_GREENDark_greenKeyword_12_0; }

		//LIGHT_GREEN="light_green"
		public EnumLiteralDeclaration getLIGHT_GREENEnumLiteralDeclaration_13() { return cLIGHT_GREENEnumLiteralDeclaration_13; }

		//"light_green"
		public Keyword getLIGHT_GREENLight_greenKeyword_13_0() { return cLIGHT_GREENLight_greenKeyword_13_0; }

		//LIGHT_BLUE="light_blue"
		public EnumLiteralDeclaration getLIGHT_BLUEEnumLiteralDeclaration_14() { return cLIGHT_BLUEEnumLiteralDeclaration_14; }

		//"light_blue"
		public Keyword getLIGHT_BLUELight_blueKeyword_14_0() { return cLIGHT_BLUELight_blueKeyword_14_0; }

		//VC_MEDIUM_BLUE="medium_blue"
		public EnumLiteralDeclaration getVC_MEDIUM_BLUEEnumLiteralDeclaration_15() { return cVC_MEDIUM_BLUEEnumLiteralDeclaration_15; }

		//"medium_blue"
		public Keyword getVC_MEDIUM_BLUEMedium_blueKeyword_15_0() { return cVC_MEDIUM_BLUEMedium_blueKeyword_15_0; }

		//PINK="pink"
		public EnumLiteralDeclaration getPINKEnumLiteralDeclaration_16() { return cPINKEnumLiteralDeclaration_16; }

		//"pink"
		public Keyword getPINKPinkKeyword_16_0() { return cPINKPinkKeyword_16_0; }
	}
	
	private DiagramElements pDiagram;
	private BehaviourGroupElements pBehaviourGroup;
	private MetaClassElements pMetaClass;
	private BehaviourElements pBehaviour;
	private StandardBehaviourElements pStandardBehaviour;
	private CustomBehaviourElements pCustomBehaviour;
	private BehaviourTypeElements unknownRuleBehaviourType;
	private MetaReferenceElements pMetaReference;
	private MetaReference2Elements pMetaReference2;
	private ShapeElements pShape;
	private LayoutElements pLayout;
	private EStringElements pEString;
	private RectangleElements pRectangle;
	private ConnectionElements pConnection;
	private ColorElements unknownRuleColor;
	private TextElements pText;
	private SprayStringElements pSprayString;
	private StringLiteralElements pStringLiteral;
	private MetaAttributeElements pMetaAttribute;
	private QualifiedNameElements pQualifiedName;
	private LineElements pLine;
	private ContainerElements pContainer;
	private SprayElementElements pSprayElement;
	private MetaReferenceAsShapeElements pMetaReferenceAsShape;
	private MetaAttributeAsShapeElements pMetaAttributeAsShape;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XsprayGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Diagram:
	//	"diagram" name=ID "metamodel" import1=STRING "metapackage" importPackage=STRING "extension" modelfileExtension=STRING
	//	behaviourGroups+=BehaviourGroup* metaClasses+=MetaClass*;
	public DiagramElements getDiagramAccess() {
		return (pDiagram != null) ? pDiagram : (pDiagram = new DiagramElements());
	}
	
	public ParserRule getDiagramRule() {
		return getDiagramAccess().getRule();
	}

	//BehaviourGroup:
	//	"behaviour" name=ID "[" (behaviours+=Behaviour ";")+ "]";
	public BehaviourGroupElements getBehaviourGroupAccess() {
		return (pBehaviourGroup != null) ? pBehaviourGroup : (pBehaviourGroup = new BehaviourGroupElements());
	}
	
	public ParserRule getBehaviourGroupRule() {
		return getBehaviourGroupAccess().getRule();
	}

	//MetaClass:
	//	"class" name=ID ("alias" alias=ID)? ("icon" icon=STRING)? ":" representedBy=Shape ("references" "["
	//	(references+=MetaReference2 ";")* "]")? ("behavior" "[" ("group" behaviourGroups+=[BehaviourGroup] ";" |
	//	behaviours+=Behaviour ";")* "]")?;
	public MetaClassElements getMetaClassAccess() {
		return (pMetaClass != null) ? pMetaClass : (pMetaClass = new MetaClassElements());
	}
	
	public ParserRule getMetaClassRule() {
		return getMetaClassAccess().getRule();
	}

	//Behaviour:
	//	StandardBehaviour | CustomBehaviour;
	public BehaviourElements getBehaviourAccess() {
		return (pBehaviour != null) ? pBehaviour : (pBehaviour = new BehaviourElements());
	}
	
	public ParserRule getBehaviourRule() {
		return getBehaviourAccess().getRule();
	}

	//StandardBehaviour:
	//	type=BehaviourType label=STRING? ("palette" paletteCompartment=STRING)?;
	public StandardBehaviourElements getStandardBehaviourAccess() {
		return (pStandardBehaviour != null) ? pStandardBehaviour : (pStandardBehaviour = new StandardBehaviourElements());
	}
	
	public ParserRule getStandardBehaviourRule() {
		return getStandardBehaviourAccess().getRule();
	}

	//CustomBehaviour:
	//	name=ID label=STRING;
	public CustomBehaviourElements getCustomBehaviourAccess() {
		return (pCustomBehaviour != null) ? pCustomBehaviour : (pCustomBehaviour = new CustomBehaviourElements());
	}
	
	public ParserRule getCustomBehaviourRule() {
		return getCustomBehaviourAccess().getRule();
	}

	//enum BehaviourType:
	//	CREATE_BEHAVIOUR="create";
	public BehaviourTypeElements getBehaviourTypeAccess() {
		return (unknownRuleBehaviourType != null) ? unknownRuleBehaviourType : (unknownRuleBehaviourType = new BehaviourTypeElements());
	}
	
	public EnumRule getBehaviourTypeRule() {
		return getBehaviourTypeAccess().getRule();
	}

	//MetaReference:
	//	"reference" name=ID ":" representedBy=Connection;
	public MetaReferenceElements getMetaReferenceAccess() {
		return (pMetaReference != null) ? pMetaReference : (pMetaReference = new MetaReferenceElements());
	}
	
	public ParserRule getMetaReferenceRule() {
		return getMetaReferenceAccess().getRule();
	}

	//MetaReference2 returns MetaReference:
	//	name=ID ":" representedBy=Connection;
	public MetaReference2Elements getMetaReference2Access() {
		return (pMetaReference2 != null) ? pMetaReference2 : (pMetaReference2 = new MetaReference2Elements());
	}
	
	public ParserRule getMetaReference2Rule() {
		return getMetaReference2Access().getRule();
	}

	//Shape:
	//	Rectangle | Text | Container | Connection | Line;
	public ShapeElements getShapeAccess() {
		return (pShape != null) ? pShape : (pShape = new ShapeElements());
	}
	
	public ParserRule getShapeRule() {
		return getShapeAccess().getRule();
	}

	//Layout:
	//	{Layout} "(" (("width" "=" lineWidth=INT)? & ("color" "=" lineColor=Color)? & ("fill" "=" fillColor=Color)? &
	//	("figure" "=" figure=STRING)? & bold?="bold"? & italic?="italic"?) ")";
	public LayoutElements getLayoutAccess() {
		return (pLayout != null) ? pLayout : (pLayout = new LayoutElements());
	}
	
	public ParserRule getLayoutRule() {
		return getLayoutAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	////	( '('
	////		(
	////			( 'width' '=' lineWidth = INT )?
	////		  & ( 'cornerWidth' '=' cornerWidth = INT)? 
	////		  & ( 'cornerHeight' '=' cornerHeight = INT)?
	////		  & ( 'color' '=' lineColor = Color)?
	////		  & ( 'fill' '=' fillColor = Color)?
	////		) 
	////	  ')'
	////	 )?
	//Rectangle:
	//	{Rectangle} "rectangle" layout= // 	name=EString
	//	Layout;
	public RectangleElements getRectangleAccess() {
		return (pRectangle != null) ? pRectangle : (pRectangle = new RectangleElements());
	}
	
	public ParserRule getRectangleRule() {
		return getRectangleAccess().getRule();
	}

	////	( '('
	////		( 
	////		  ( 'width' '=' lineWidth = INT )?
	////		  &
	////		  ( 'color' '=' lineColor = Color)?
	////		)
	////	  ')'
	////	 )?
	//Connection:
	//	{Connection} "connection" layout=Layout ("[" "from" from=ID ";" "to" to=ID ";" (("fromText" fromLabel=Text ";")? &
	//	("connectionText" connectionLabel=Text ";")? & ("toText" toLabel=Text ";")?) "]")?;
	public ConnectionElements getConnectionAccess() {
		return (pConnection != null) ? pConnection : (pConnection = new ConnectionElements());
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}

	//enum Color:
	//	BLACK="black" | RED="red" | GREEN="green" | LIGHT_GRAY="light_gray" | LIGHT_LIGHT_GRAY="light_light_gray" |
	//	GRAY="gray" | ORANGE="orange" | WHITE="white" | YELLOW="yellow" | DARK_BLUE="dark_blue" | VC_DARK_BLUE="vc_dark_blue"
	//	| CYAN="cyan" | DARK_GREEN="dark_green" | LIGHT_GREEN="light_green" | LIGHT_BLUE="light_blue" |
	//	VC_MEDIUM_BLUE="medium_blue" | PINK="pink";
	public ColorElements getColorAccess() {
		return (unknownRuleColor != null) ? unknownRuleColor : (unknownRuleColor = new ColorElements());
	}
	
	public EnumRule getColorRule() {
		return getColorAccess().getRule();
	}

	//Text:
	//	{Text} "text" layout=Layout //	name=EString
	//	value+=SprayString+;
	public TextElements getTextAccess() {
		return (pText != null) ? pText : (pText = new TextElements());
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}

	//SprayString:
	//	MetaAttribute | StringLiteral;
	public SprayStringElements getSprayStringAccess() {
		return (pSprayString != null) ? pSprayString : (pSprayString = new SprayStringElements());
	}
	
	public ParserRule getSprayStringRule() {
		return getSprayStringAccess().getRule();
	}

	//StringLiteral:
	//	name=STRING;
	public StringLiteralElements getStringLiteralAccess() {
		return (pStringLiteral != null) ? pStringLiteral : (pStringLiteral = new StringLiteralElements());
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//MetaAttribute:
	//	name=QualifiedName;
	public MetaAttributeElements getMetaAttributeAccess() {
		return (pMetaAttribute != null) ? pMetaAttribute : (pMetaAttribute = new MetaAttributeElements());
	}
	
	public ParserRule getMetaAttributeRule() {
		return getMetaAttributeAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Line:
	//	{Line} "line" layout=Layout;
	public LineElements getLineAccess() {
		return (pLine != null) ? pLine : (pLine = new LineElements());
	}
	
	public ParserRule getLineRule() {
		return getLineAccess().getRule();
	}

	//Container:
	//	{Container} "container" layout=Layout "[" (parts+=SprayElement ";")* "]";
	public ContainerElements getContainerAccess() {
		return (pContainer != null) ? pContainer : (pContainer = new ContainerElements());
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}

	//SprayElement:
	//	Shape | MetaReferenceAsShape | MetaAttributeAsShape;
	public SprayElementElements getSprayElementAccess() {
		return (pSprayElement != null) ? pSprayElement : (pSprayElement = new SprayElementElements());
	}
	
	public ParserRule getSprayElementRule() {
		return getSprayElementAccess().getRule();
	}

	//MetaReferenceAsShape returns MetaReference:
	//	"reference" name=ID ("attribute" labelProperty=ID)?;
	public MetaReferenceAsShapeElements getMetaReferenceAsShapeAccess() {
		return (pMetaReferenceAsShape != null) ? pMetaReferenceAsShape : (pMetaReferenceAsShape = new MetaReferenceAsShapeElements());
	}
	
	public ParserRule getMetaReferenceAsShapeRule() {
		return getMetaReferenceAsShapeAccess().getRule();
	}

	//MetaAttributeAsShape returns MetaAttribute:
	//	"attribute" name=ID;
	public MetaAttributeAsShapeElements getMetaAttributeAsShapeAccess() {
		return (pMetaAttributeAsShape != null) ? pMetaAttributeAsShape : (pMetaAttributeAsShape = new MetaAttributeAsShapeElements());
	}
	
	public ParserRule getMetaAttributeAsShapeRule() {
		return getMetaAttributeAsShapeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
