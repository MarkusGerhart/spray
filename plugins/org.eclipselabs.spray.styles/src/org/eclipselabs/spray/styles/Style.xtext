/** ****************************************************************************
 * Copyright (c)  The Spray Project.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Spray Dev Team - initial API and implementation
 **************************************************************************** */
grammar org.eclipselabs.spray.styles.Style with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipselabs.org/spray/styles/Style"

StyleContainer:
	styleContainerElement+=StyleContainerElement*;

StyleContainerElement:
	Style | Gradient;

Style:
	{Style}
	"style" name=ID ("extends" ( ('JAVA' superStyle=JvmTypeReference) | (superStyleFromDsl=[Style]) ) )? "{"
	   ("description" "=" description=STRING)?
	   layout=StyleLayout
	"}";

Gradient:
	{Gradient}
	"gradient" name=ID "{"
		("description" "=" description=STRING)? 
		layout = GradientLayout		
	"}";

StyleLayout: 
    {StyleLayout}
    (
		("transparency"     	"=" transparency=DOUBLE)? &
		("background-color" 	"=" background=ColorOrGradient)? &
		("gradient-orientation"	"=" gradient_orientation=GradientAllignment)? &
		("highlighting"				highlighting=HighlightingValues)? &	
		("line-color"       	"=" lineColor=ColorWithTransparency)? & 
        ("line-width"       	"=" lineWidth=INT)? &
        ("line-style"       	"=" lineStyle=LineStyle)? &
        ("font-name"        	"=" fontName=STRING)? &
	    ("font-color"       	"=" fontColor=Color)? &
	    ("font-size"        	"=" fontSize=INT)? &
	    ("font-italic"      	"=" fontItalic=YesNoBool)? &
	    ("font-bold"        	"=" fontBold=YesNoBool)?
    )
;
GradientLayout:
	{GradientLayout}
	(
		("area" area+=GradientColorArea)*
	)
;

HighlightingValues:
	{HighlightingValues}
	 "(" ( "selected" "=" selected=(ColorOrGradient))?  ( "multiselected" "=" multiselected=(ColorOrGradient))? 
		 ( "allowed"  "=" allowed=(ColorOrGradient))?   ( "unallowed" "=" unallowed=(ColorOrGradient))? ")"
;

GradientColorArea: {GradientColorArea}"(" "color" "=" color=Color "," "offset" "=" offset=DOUBLE ")"+;
ColorOrGradient: Color | Transparent | GradientRef;
ColorWithTransparency: Color | Transparent;
Color: RGBColor | ColorConstantRef;
RGBColor: "RGB" "(" red=INT "," green=INT "," blue=INT ")";
GradientRef: {GradientRef} ( ('JAVA' gradientRef=JvmTypeReference) | (gradientRefFromDsl=[Gradient]));
ColorConstantRef: value=ColorConstants;
Transparent: transparent?="transparent";
enum ColorConstants:
	WHITE="white" |
	LIGHT_LIGHT_GRAY="very-light-gray" |
	LIGHT_GRAY="light-gray" |
	GRAY="gray" |
	DARK_GRAY="dark-gray" |
	BLACK="black" |
	RED="red" |
	LIGHT_ORANGE="light-orange" |
	ORANGE="orange" |
	DARK_ORANGE="dark-orange" |
	YELLOW="yellow" |
	GREEN="green" |
	LIGHT_GREEN="light-green" |
	DARK_GREEN="dark-green" |
	CYAN="cyan" |
	LIGHT_BLUE="light-blue" |
	BLUE="blue" |
	DARK_BLUE="dark-blue";

enum LineStyle:
	SOLID="solid" |
	DOT="dot" |
	DASH="dash" |
	DASHDOT="dash-dot" |
	DASHDOTDOT="dash-dot-dot";

enum YesNoBool:
	YES="yes" | 
	NO="no";

enum GradientAllignment:
	HORIZONTAL="horizontal" |
	VERTICAL="vertical";

DOUBLE returns ecore::EDouble: INT "." INT;
