<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- 
Use steps of 10 to increment template IDs. This allows later inserting other templates
in numerical order.
 -->
<templates>
<template 
    id="spray.template.020"
    autoinsert="true" 
    context="org.eclipselabs.spray.xtext.Spray.CustomBehaviour" 
    deleted="false" 
    description="" 
    enabled="true" 
    name="Add custom behavior">${name} "${label}"</template>
<template
    id="spray.template.030"
    autoinsert="true" 
    context="org.eclipselabs.spray.xtext.Spray.kw_text" 
    deleted="false" 
    description="Adds a text entry to the shape" 
    enabled="true" 
    name="Add text">text ( )  { ${cursor} }</template>
<template 
    id="spray.template.040"
    autoinsert="true" 
    context="org.eclipselabs.spray.xtext.Spray.kw_behavior" 
    deleted="false" 
    description="Add a behavior group with an palette entry" 
    enabled="true" 
    name="Behavior with palette">behavior {
    create into ${containmentReference:CrossReference('CreateBehavior.containmentReference')} palette "${PaletteName}" askFor ${askFor:CrossReference('CreateBehavior.askFor')}
}
</template>
<template
    id="spray.template.050"
    autoinsert="true" 
    context="org.eclipselabs.spray.xtext.Spray.kw_class" 
    deleted="false" 
    description="Create a class mapping for a node" 
    enabled="true" 
    name="Class node">class ${type:CrossReference('MetaClass.type')} {
    shape ${ShapeReference}
    behavior {
        create into ${containmentReference:CrossReference('CreateBehavior.containmentReference')} palette "${PaletteName}" askFor ${askFor:CrossReference('CreateBehavior.askFor')}
    }    
}
</template>
<template 
    id="spray.template.060"
autoinsert="true" context="org.eclipselabs.spray.xtext.Spray.kw_class" deleted="false" description="Create a class mapping for a connection" enabled="true" name="Connection node">class ${type:CrossReference('MetaClass.type')} {
    connection ${ConnectionReference} {
        from ${from:CrossReference('Connection.from')}
        to   ${to:CrossReference('Connection.to')}
    }
    behavior {
        create into ${containmentReference:CrossReference('CreateBehavior.containmentReference')} palette "${PaletteName}" askFor ${askFor:CrossReference('CreateBehavior.askFor')}
    }   
}
</template>
<template 
    id="spray.template.070"
autoinsert="true" context="org.eclipselabs.spray.xtext.Spray.kw_line" deleted="false" description="Adds a line to a shape" enabled="true" name="Line">line ( color=${black} width=1 );</template>
<template id="spray.template.080"
autoinsert="true" context="org.eclipselabs.spray.xtext.Spray.SprayStyleRef" deleted="false" description="Refer to a style" enabled="true" name="Style">style ${name:CrossReference('SprayStyleRef.style')}</template>
<template id="spray.template.090" autoinsert="true" context="org.eclipselabs.spray.xtext.Spray.kw_custom" deleted="false" description="Inserts a custom behavior" enabled="true" name="Custom Behavior">custom ${name} "${label}"</template>
<template id="spray.template.100" autoinsert="true" context="org.eclipselabs.spray.xtext.Spray.kw_custom" deleted="false" description="Adds a reference to an existing implementation of CustomFeature" enabled="true" name="Existing Custom Feature">custom ref ${:CrossReference('CustomBehavior.realizedBy')} "${label}"</template>

</templates>
