/*
 * generated by Xtext
 */
package org.eclipselabs.spray.xtext.ui.outline;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.outline.IOutlineNode;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;
import org.eclipselabs.spray.mm.spray.BehaviorGroup;
import org.eclipselabs.spray.mm.spray.Diagram;
import org.eclipselabs.spray.mm.spray.Import;
import org.eclipselabs.spray.mm.spray.LineInSpray;
import org.eclipselabs.spray.mm.spray.MetaClass;
import org.eclipselabs.spray.mm.spray.MetaReference;
import org.eclipselabs.spray.mm.spray.SprayStyleRef;

/**
 * customization of the default outline structure
 */
public class SprayOutlineTreeProvider extends DefaultOutlineTreeProvider {
    @Override
    protected void _createChildren(DocumentRootNode parentNode, EObject modelElement) {
        Diagram diagram = (Diagram) modelElement;

        //         first the Diagram entry
        createNode(parentNode, diagram);
        // then the rest
        for (EObject element : diagram.eContents()) {
            if (!(element instanceof SprayStyleRef)) {
                createNode(parentNode, element);
            }
        }
    }

    @Override
    protected void _createNode(IOutlineNode parentNode, EObject modelElement) {
        if ((modelElement instanceof MetaClass) || (modelElement instanceof BehaviorGroup) || (modelElement instanceof Import)) {
            createEObjectNode(parentNode, modelElement);
        }
    }

    protected boolean _isLeaf(Diagram element) {
        return true;
    }

    protected boolean _isLeaf(MetaClass element) {
        return true;
    }

    protected boolean _isLeaf(BehaviorGroup element) {
        return true;
    }

    protected boolean _isLeaf(LineInSpray element) {
        return true;
    }

    protected boolean _isLeaf(MetaReference element) {
        return true;
    }

}
