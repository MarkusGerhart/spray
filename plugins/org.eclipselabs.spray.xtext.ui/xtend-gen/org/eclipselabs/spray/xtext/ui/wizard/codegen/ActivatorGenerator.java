package org.eclipselabs.spray.xtext.ui.wizard.codegen;

import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.eclipse.xtext.xtend2.lib.StringConcatenation;
import org.eclipselabs.spray.xtext.ui.wizard.SprayProjectInfo;

@SuppressWarnings("all")
public class ActivatorGenerator {
  
  public void doGenerate(final SprayProjectInfo info, final IFileSystemAccess fsa) {
    {
      String _projectName = info.getProjectName();
      final String project = _projectName;
      String _basePath = info.getBasePath();
      String _operator_plus = StringExtensions.operator_plus("src/", _basePath);
      String _operator_plus_1 = StringExtensions.operator_plus(_operator_plus, "/Activator.java");
      final String fileName = _operator_plus_1;
      String _projectName_1 = info.getProjectName();
      StringConcatenation _generateActivator = this.generateActivator(info);
      fsa.generateFile(fileName, _projectName_1, _generateActivator);
    }
  }
  
  public StringConcatenation generateActivator(final SprayProjectInfo info) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _basePackage = info.getBasePackage();
    _builder.append(_basePackage, "");
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import org.eclipse.ui.plugin.AbstractUIPlugin;");
    _builder.newLine();
    _builder.append("import org.osgi.framework.BundleContext;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* The activator class controls the plug-in life cycle");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("public class Activator extends AbstractUIPlugin {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// The plug-in ID");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static final String PLUGIN_ID = \"");
    String _projectName = info.getProjectName();
    _builder.append(_projectName, "    ");
    _builder.append("\"; //$NON-NLS-1$");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// The shared instance");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("private static Activator plugin;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* The constructor");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public Activator() {");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/*");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* (non-Javadoc)");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @see org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext)");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void start(BundleContext context) throws Exception {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("super.start(context);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("plugin = this;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/*");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* (non-Javadoc)");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public void stop(BundleContext context) throws Exception {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("plugin = null;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("super.stop(context);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/**");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* Returns the shared instance");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* ");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("* @return the shared instance");
    _builder.newLine();
    _builder.append("     ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("public static Activator getDefault() {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return plugin;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("}\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    return _builder;
  }
}