<<<<<<< HEAD
/*************************************************************************************
 *
 * Spray diagram definition
 * 
 * This file contains the definition of a graphical editor using the Spray Language.
 * Refer to http://code.google.com/a/eclipselabs.org/p/spray/ for documentation.
 *
 * See also mydiagram.properties to configure generator properties.
 *************************************************************************************/
// Add import statements here, e.g.
=======
/*************************************************************************************
 *
 * Spray diagram definition
 * 
 * This file contains the definition of a graphical editor using the Spray Language.
 * Refer to http://code.google.com/a/eclipselabs.org/p/spray/ for documentation.
 *
 * See also mydiagram.properties to configure generator properties.
 *************************************************************************************/
// Add import statements here, e.g.
>>>>>>> eclipse_juno
import LanguageWorkbenchCompetition.*
import org.eclipselabs.spray.shapes.*
import org.eclipselabs.spray.styles.*
diagram LWC for LWCModelElement style LWC2012CorporateStyle

class LWCVesselHorizontal alias Horizontal {
	shape LWC_Vessel_Horizontal {
<<<<<<< HEAD
		name into shapeName
=======
		name into shapeName
>>>>>>> eclipse_juno
		description into descriptionName
	}
	behavior {
		create into modelElements palette "Vessels"
	}
}

class LWCVesselVertical alias Vertical {
	shape LWC_Vessel_Vertical {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Vessels"
	}
}

class LWCHeatExchanger alias HeatExchanger {
	shape LWC_HeatExchanger {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Vessels"
	}
}

class LWCJoint alias Joint {
	shape LWC_Joint behavior {
		create into modelElements palette "Joints";
	}
}

class LWCLocationNoLine alias Noline {
	shape LWC_Location_NoLine {
		name into shapeName value into valueName
	}
	behavior {
		create into modelElements palette "Locations"
	}
}

class LWCLocationSolidLine alias Solidline {
	shape LWC_Location_SolidLine {
		name into shapeName ( "#" + name + "#" ) value into valueName ( "#" + value + "#" )
	}
	behavior {
		create into modelElements palette "Locations"
	}
}

class LWCLocationDashLine alias Dashline {
	shape LWC_Location_DashedLine {
		name into shapeName value into valueName
	}
	behavior {
		create into modelElements palette "Locations"
	}
}

class LWCPump alias Pump {
	shape LWC_Pump {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Pumps"
	}
}

class LWCPumpVacuum alias Vacuum {
	shape LWC_Pump_Vacuum {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Pumps"
	}
}

class LWCValve alias Valve {
	shape LWC_Valve {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Valves"
	}
}

class LWCValveControl alias Control {
	shape LWC_Valve_Control {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Valves"
	}
}

class LWCValveManuel alias Manual {
	shape LWC_Valve_Manual {
		name into shapeName
	}
	behavior {
		create into modelElements palette "Valves"
	}
}

class LWCSystemEnd alias SystemEnd {
	shape LWC_SystemEnd behavior {
		create into modelElements palette "Systemend"
	}
}

<<<<<<< HEAD
class LWCPipe { // alias Pipe {
	connection LWC_Pipe {
		name into pipeText
=======
class LWCPipe { // alias Pipe {
	connection LWC_Pipe {
		name into pipeText
>>>>>>> eclipse_juno
	}( ) {
		from fromElement;
		to toElement;
	}
	behavior {
		create into modelElements palette "Connections"
	}
}

<<<<<<< HEAD
class LWCSourceExhaustStart { // alias StartSourceExhaust {
=======
class LWCSourceExhaustStart { // alias StartSourceExhaust {
>>>>>>> eclipse_juno
	connection LWC_Source_Exhaust {
		name into connectionName
	}
	( ) {
		from fromElement;
		to toElement;
	}
	behavior {
		create into modelElements palette "Connections"
	}
}

<<<<<<< HEAD
class LWCSourceExhaustEnd { //alias EndSourceExhaust {
=======
class LWCSourceExhaustEnd { //alias EndSourceExhaust {
>>>>>>> eclipse_juno
	connection LWC_Source_Exhaust {
		name into connectionName
	}
	( ) {
		from fromElement;
<<<<<<< HEAD
		to toElement;
=======
		to toElement;
>>>>>>> eclipse_juno
	}
	behavior {
		create into modelElements palette "Connections"
	}
}