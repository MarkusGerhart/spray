@Ecore(nsPrefix="busmod", nsURI="http://www.mod4j.org/busmod")
@GenModel(modelDirectory="/org.mod4j.dsl.businessdomain.mm/src-gen", importerID="org.eclipse.emf.importer.ecore", complianceLevel="5.0", interfaceNamePattern="{0}", classNamePattern="")
package BusinessDomainDsl

enum Multiplicity {
	ZeroMany
	One = 1
	ZeroOne = 2
	OneMany = 3
}

enum DateTimeAccuracy {
	Millisecond = 1
	Second = 2
	Minute = 4
	Hour = 8
	Day = 16
	Month = 32
	Year = 64
}

enum PersistencyMode {
	ReadWrite
	Read
	None
}

class ModelElement {
	String name = ""
	String description = ""
}

class BusinessDomainModel extends ModelElement {
	contains Enumeration[] enumerations opposite model
	contains AbstractType[] types opposite model
	contains unordered Association[] associations opposite model
	contains Package[] packages
}

class BusinessClass extends AbstractBusinessClass {
	contains AbstractBusinessRule[] businessRules opposite businessClass
	refers BusinessClass superclass
	refers Association[] associationsTo opposite source
}

abstract class Property extends ModelElement {
	String dataType
	boolean nullable
	boolean ^derived = "false"
	boolean writable = "false"
	PersistencyMode persistency = "ReadWrite"
	boolean hasDefault = "false"
	container AbstractType owningType opposite properties
}

class Enumeration extends ModelElement {
	contains EnumerationLiteral[] enumerationLiterals opposite enumeration
	container BusinessDomainModel model opposite enumerations
}

class EnumerationLiteral extends ModelElement {
	int persistedValue
	container Enumeration enumeration opposite enumerationLiterals
}

abstract class AbstractBusinessRule extends ModelElement {
	container BusinessClass businessClass opposite businessRules
}

class BoolProperty extends Property {
	boolean defaultValue = "false"
}

class DateTimeProperty extends Property {
	DateTimeAccuracy accuracy = "Second"
	String defaultValue = ""
}

class EnumerationProperty extends Property {
	refers Enumeration[1] ^type
	String defaultValueAsString
}

class IntegerProperty extends Property {
	int minValue = "-2147483648"
	int maxValue = "2147483647"
	int defaultValue
}

class StringProperty extends Property {
	String regularExpression
	int minLength = "-1"
	int maxLength = "-1"
	String defaultValue
}

abstract class AbstractType extends ModelElement {
	contains Property[] properties opposite owningType
	container BusinessDomainModel model opposite types
}

class BlobBinaryProperty extends Property {
}

class BlobTextProperty extends Property {
}

class Association extends ModelElement {
	refers BusinessClass[1] source opposite associationsTo
	refers AbstractBusinessClass[1] target opposite associationsFrom
	String sourceRoleName = "sourceRoleName"
	Multiplicity sourceMultiplicity = "One"
	String targetRoleName = "targetRoleName"
	Multiplicity targetMultiplicity = "One"
	boolean composite = "false"
	boolean[1] bidirectional = "false"
	boolean[1] ordered = "false"
	container BusinessDomainModel model opposite associations
}

class DecimalProperty extends Property {
	float minValue = "-2147483648"
	float maxValue = "-2147483648"
	boolean minInclusive = "true"
	boolean maxInclusive = "true"
	float defaultValue = "0"
}

abstract class AbstractBusinessClass extends AbstractType {
	refers Association[] associationsFrom opposite target
}

class BusinessClassReference extends AbstractBusinessClass {
	String referredModel
}

class UniqueRule extends AbstractBusinessRule {
	refers Property[] properties
}

class BusinessRule extends AbstractBusinessRule {
}

class Package extends ModelElement {
	contains BusinessClass[] classes
}